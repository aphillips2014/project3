When we use Function.call(this,someval) is it a true statement that this will make a call to the Function class for us 
during the instantiation of the subclass. For example below when I instantiate the Plane subclass will this call the superclass
Transportation?

var Transportation = function(type){
      this.type = type;
};

var Plane = function(type){
      Transportation.call(this,type);
};

//Overwrite Planes constructor so lookups on Plane will delegate to Transportation
Plane.prototype = Object.create(Transportation.prototype);

var transType = new Plane("Airbus");

Here are my questions:
#1 Plane is a subclass of Transportation superclass. When I set "this.type" in Transportations constructor,
does that mean "this.type" is put into Transportations prototype object since all classes come with this prototype object
by default? Or is the "this.type" only found in the Transportation object only? Please help clarify this for me. :-)

****************************************************************************************************

Frogger observation questions to cement my understanding #1 
The question is concerning resources.js:
#1 At the bottom of the resources.js I see the following code:
    window.Resources = {
        load: load,
        get: get,
        onReady: onReady,
        isReady: isReady
    };
   My question is that since the function that this code is apart of is immediately executed upon loading, this makes all the functions local scope?  So are we adding a Resources property to window global object of the function objects that will allow us to call these local scoped functions from global scope?
   
   file:///C://Users/AP6356/Documents/GitHub/project3/index.html
   
   
   
  
  
  In init function ...
engine.js:175 In reset......
engine.js:46 in main()

app.js:192 coll1 is : true
app.js:193 coll2 is : false
app.js:194 coll3 is : true
app.js:195 coll4 is : false
app.js:197 Enemy x location is: 1
app.js:198 Enemy y location is: 65
app.js:200 Enemy height is: 171
app.js:201 Enemy width is: 101
app.js:202 Player height is: 171
app.js:203 Player width is: 101
app.js:205 Player x location is: 205
app.js:206 Player y location is: 430



engine.js:46 in main()
app.js:192 coll1 is : true
app.js:193 coll2 is : false
app.js:194 coll3 is : false
app.js:195 coll4 is : false
app.js:197 Enemy x location is: 194.44
app.js:198 Enemy y location is: 65
app.js:200 Enemy height is: 171
app.js:201 Enemy width is: 101
app.js:202 Player height is: 171
app.js:203 Player width is: 101
app.js:205 Player x location is: 205
app.js:206 Player y location is: 430
engine.js:46 in main()
app.js:192 coll1 is : true
app.js:193 coll2 is : false
app.js:194 coll3 is : false
app.js:195 coll4 is : true
app.js:197 Enemy x location is: 390.6
app.js:198 Enemy y location is: 65
app.js:200 Enemy height is: 171
app.js:201 Enemy width is: 101
app.js:202 Player height is: 171
app.js:203 Player width is: 101
app.js:205 Player x location is: 205
app.js:206 Player y location is: 430
engine.js:46 in main()
app.js:192 coll1 is : true
app.js:193 coll2 is : false
app.js:194 coll3 is : true
app.js:195 coll4 is : false
app.js:197 Enemy x location is: -100
app.js:198 Enemy y location is: 65
app.js:200 Enemy height is: 171
app.js:201 Enemy width is: 101
app.js:202 Player height is: 171
app.js:203 Player width is: 101
app.js:205 Player x location is: 205
app.js:206 Player y location is: 430
engine.js:46 in main()
app.js:192 coll1 is : true
app.js:193 coll2 is : false
app.js:194 coll3 is : true
app.js:195 coll4 is : false
app.js:197 Enemy x location is: 93.12
app.js:198 Enemy y location is: 65
app.js:200 Enemy height is: 171
app.js:201 Enemy width is: 101
app.js:202 Player height is: 171
app.js:203 Player width is: 101
app.js:205 Player x location is: 205
app.js:206 Player y location is: 430
engine.js:46 in main()
app.js:192 coll1 is : true
app.js:193 coll2 is : false
app.js:194 coll3 is : false
app.js:195 coll4 is : false
app.js:197 Enemy x location is: 288.96000000000004
app.js:198 Enemy y location is: 65
app.js:200 Enemy height is: 171
app.js:201 Enemy width is: 101
app.js:202 Player height is: 171
app.js:203 Player width is: 101
app.js:205 Player x location is: 205
app.js:206 Player y location is: 430
engine.js:46 in main()
app.js:192 coll1 is : true
app.js:193 coll2 is : false
app.js:194 coll3 is : false
app.js:195 coll4 is : true
app.js:197 Enemy x location is: 483.52000000000004
app.js:198 Enemy y location is: 65
app.js:200 Enemy height is: 171
app.js:201 Enemy width is: 101
app.js:202 Player height is: 171
app.js:203 Player width is: 101
app.js:205 Player x location is: 205
app.js:206 Player y location is: 361.5999999999999
engine.js:46 in main()
app.js:192 coll1 is : true
app.js:193 coll2 is : false
app.js:194 coll3 is : true
app.js:195 coll4 is : false
app.js:197 Enemy x location is: -100
app.js:198 Enemy y location is: 65
app.js:200 Enemy height is: 171
app.js:201 Enemy width is: 101
app.js:202 Player height is: 171
app.js:203 Player width is: 101
app.js:205 Player x location is: 205
app.js:206 Player y location is: 361.5999999999999
engine.js:46 in main()
app.js:192 coll1 is : true
app.js:193 coll2 is : false
app.js:194 coll3 is : true
app.js:195 coll4 is : false
app.js:197 Enemy x location is: 94.4
app.js:198 Enemy y location is: 65
app.js:200 Enemy height is: 171
app.js:201 Enemy width is: 101
app.js:202 Player height is: 171
app.js:203 Player width is: 101
app.js:205 Player x location is: 205
app.js:206 Player y location is: 310.29999999999984
engine.js:46 in main()
app.js:192 coll1 is : true
app.js:193 coll2 is : false
app.js:194 coll3 is : false
app.js:195 coll4 is : false
app.js:197 Enemy x location is: 288
app.js:198 Enemy y location is: 65
app.js:200 Enemy height is: 171
app.js:201 Enemy width is: 101
app.js:202 Player height is: 171
app.js:203 Player width is: 101
app.js:205 Player x location is: 205
app.js:206 Player y location is: 241.89999999999978
engine.js:46 in main()
app.js:192 coll1 is : false
app.js:193 coll2 is : false
app.js:194 coll3 is : false
app.js:195 coll4 is : true
app.js:197 Enemy x location is: 481.28
app.js:198 Enemy y location is: 65
app.js:200 Enemy height is: 171
app.js:201 Enemy width is: 101
app.js:202 Player height is: 171
app.js:203 Player width is: 101
app.js:205 Player x location is: 205
app.js:206 Player y location is: 190.5999999999998
engine.js:46 in main()
app.js:192 coll1 is : false
app.js:193 coll2 is : false
app.js:194 coll3 is : true
app.js:195 coll4 is : false
app.js:197 Enemy x location is: -100
app.js:198 Enemy y location is: 65
app.js:200 Enemy height is: 171
app.js:201 Enemy width is: 101
app.js:202 Player height is: 171
app.js:203 Player width is: 101
app.js:205 Player x location is: 205
app.js:206 Player y location is: 173.4999999999998
engine.js:46 in main()
app.js:192 coll1 is : false
app.js:193 coll2 is : false
app.js:194 coll3 is : true
app.js:195 coll4 is : false
app.js:197 Enemy x location is: 92.95999999999998
app.js:198 Enemy y location is: 65
app.js:200 Enemy height is: 171
app.js:201 Enemy width is: 101
app.js:202 Player height is: 171
app.js:203 Player width is: 101
app.js:205 Player x location is: 205
app.js:206 Player y location is: 173.4999999999998
engine.js:46 in main()

app.js:192 coll1 is : false
app.js:193 coll2 is : false
app.js:194 coll3 is : false
app.js:195 coll4 is : false
app.js:197 Enemy x location is: 286.08
app.js:198 Enemy y location is: 65
app.js:200 Enemy height is: 171
app.js:201 Enemy width is: 101
app.js:202 Player height is: 171
app.js:203 Player width is: 101
app.js:205 Player x location is: 205
app.js:206 Player y location is: 173.4999999999998
app.js:211 COLLISION

nvows.com 
8886881192
expeditedllc.com
dynovite.com 8594281000

http://jlongster.com/Making-Sprite-based-Games-with-Canvas
http://jshint.com/ - javascript checker
http://diveintohtml5.info/canvas.html#text
http://jsfiddle.net/xAFs9/3/
http://www.choskim.me/when-to-use-semicolons-in-javascript/


Closures are functions that refer to independent (free) variables. In other words, the function defined in the closure 'remembers' the environment in which it was created.Apr 27, 2015


++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Lexical scoping
init() creates a local variable name and then a function called displayName(). displayName() is an inner function that is defined inside init() and is only available within the body of that function. displayName() has no local variables of its own, however it has access to the variables of outer functions and so can use the variable name declared in the parent function.

Run the code and see that this works. This is an example of lexical scoping: in JavaScript, the scope of a variable is defined by its location within the source code (it is apparent lexically) and nested functions have access to variables declared in their outer scope.

name is in global scope to displayName function withing init, so it has access to the name variable
function init() {
  var name = "Mozilla"; // name is a local variable created by init
  function displayName() { // displayName() is the inner function, a closure
    alert(name); // use variable declared in the parent function    
  }
  displayName();    
}
init();

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Closures
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Car.prototype's contstructor is Car

https://github.com/aphillips2014/frontend-nanodegree-arcade-game.git

http://discussions.udacity.com/t/a-direction-please/13803/7
https://www.udacity.com/course/viewer#!/c-ud015/l-3072058665/m-3096218638	
http://discussions.udacity.com/t/wow-this-is-a-large-step-from-resume/4634
http://discussions.udacity.com/t/wow-this-is-a-large-step-from-resume/4634/8
http://jlongster.com/Making-Sprite-based-Games-with-Canvas - collision detection
http://discussions.udacity.com/t/which-design-pattern-should-i-use/15610




           